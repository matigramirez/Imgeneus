// <auto-generated />
using System;
using Imgeneus.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Imgeneus.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210117235912_MakePointsUInt")]
    partial class MakePointsUInt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ushort>("Angle")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Class")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DATETIME");

                    b.Property<ushort>("Deaths")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Defeats")
                        .HasColumnType("smallint unsigned");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime(6)");

                    b.Property<ushort>("Dexterity")
                        .HasColumnType("smallint unsigned");

                    b.Property<uint>("Exp")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Face")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("Gold")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Hair")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("HealthPoints")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Height")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Intelligence")
                        .HasColumnType("smallint unsigned");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRename")
                        .HasColumnType("tinyint(1)");

                    b.Property<ushort>("Kills")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Level")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Luck")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ManaPoints")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Map")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Mode")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16) CHARACTER SET utf8mb4");

                    b.Property<float>("PosX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnType("float");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Rec")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("SkillPoint")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("StaminaPoints")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("StatPoint")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Strength")
                        .HasColumnType("smallint unsigned");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<ushort>("Victories")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Wisdom")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterActiveBuff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResetTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterActiveBuff");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterFriend", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("FriendId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId", "FriendId");

                    b.HasIndex("FriendId");

                    b.ToTable("CharacterFriends");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("Bag")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<byte>("Count")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Craftname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("DyeColorAlpha")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorB")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorG")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorR")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DyeColorSaturation")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GemTypeId1")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId2")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId3")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId4")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId5")
                        .HasColumnType("int");

                    b.Property<int>("GemTypeId6")
                        .HasColumnType("int");

                    b.Property<bool>("HasDyeColor")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("MakeType")
                        .IsRequired()
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4");

                    b.Property<ushort>("Quality")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TypeId")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("Type", "TypeId");

                    b.ToTable("CharacterItems");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterQuest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<byte>("Count1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Count2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Count3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Delay")
                        .HasColumnType("smallint unsigned");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Finish")
                        .HasColumnType("tinyint(1)");

                    b.Property<ushort>("QuestId")
                        .HasColumnType("smallint unsigned");

                    b.Property<bool>("Success")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("QuestId");

                    b.ToTable("CharacterQuest");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<byte>("Number")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkill");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbItem", b =>
                {
                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TypeId")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("TypeID");

                    b.Property<byte>("AttackTime")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Attackfighter")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Attackmage")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Buy")
                        .HasColumnType("int");

                    b.Property<ushort>("ConstDex")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstHP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstInt")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstLuc")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstMP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstRec")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstSP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstStr")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ConstWis")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Count")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Country")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Defense")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("Effect3");

                    b.Property<byte>("Defensefighter")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Defensemage")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Drop")
                        .HasColumnType("smallint unsigned");

                    b.Property<uint>("Duration")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Element")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("Attrib");

                    b.Property<byte>("Exp")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Grade")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Grow")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ItemID");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<ushort>("MinAttack")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("Effect1");

                    b.Property<byte>("Patrolrogue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("PlusAttack")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("Effect2");

                    b.Property<ushort>("Quality")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Range")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ReqDex")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("ReqIg")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("ReqInt")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("ReqOg")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("ReqRec")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ReqStr")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ReqVg")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ReqWis")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Reqlevel")
                        .HasColumnType("smallint unsigned");

                    b.Property<short>("Reqluc")
                        .HasColumnType("smallint");

                    b.Property<ushort>("Resistance")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("Effect4");

                    b.Property<int>("Sell")
                        .HasColumnType("int");

                    b.Property<byte>("Server")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Shootrogue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Special")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Speed")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Type", "TypeId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<uint>("Exp")
                        .HasColumnType("int unsigned");

                    b.Property<ushort>("Level")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Mode")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbMob", b =>
                {
                    b.Property<ushort>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("MobID");

                    b.Property<byte>("AI")
                        .HasColumnType("tinyint unsigned");

                    b.Property<short>("Attack1")
                        .HasColumnType("smallint");

                    b.Property<short>("Attack2")
                        .HasColumnType("smallint");

                    b.Property<short>("Attack3")
                        .HasColumnType("smallint");

                    b.Property<byte>("AttackAttrib1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackAttrib2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackOk1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackOk2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackOk3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("AttackPlus1")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AttackPlus2")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AttackPlus3")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("AttackRange1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackRange2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackRange3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackSpecial1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackSpecial2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackSpecial3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("AttackTime1")
                        .HasColumnType("int");

                    b.Property<int>("AttackTime2")
                        .HasColumnType("int");

                    b.Property<int>("AttackTime3")
                        .HasColumnType("int");

                    b.Property<ushort>("AttackType1")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AttackType2")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AttackType3")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("ChaseRange")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ChaseStep")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("ChaseTime")
                        .HasColumnType("int");

                    b.Property<byte>("Day")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Defense")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Dex")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Element")
                        .HasColumnType("tinyint unsigned");

                    b.Property<short>("Exp")
                        .HasColumnType("smallint");

                    b.Property<byte>("Fraction")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("AttackAttrib3");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<ushort>("Level")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("Luc")
                        .HasColumnType("smallint unsigned");

                    b.Property<short>("MP")
                        .HasColumnType("smallint");

                    b.Property<ushort>("Magic")
                        .HasColumnType("smallint unsigned");

                    b.Property<string>("MobName")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40) CHARACTER SET utf8mb4");

                    b.Property<short>("MoneyMax")
                        .HasColumnType("smallint")
                        .HasColumnName("Money2");

                    b.Property<short>("MoneyMin")
                        .HasColumnType("smallint")
                        .HasColumnName("Money1");

                    b.Property<byte>("NormalStep")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("NormalTime")
                        .HasColumnType("int");

                    b.Property<int>("QuestItemId")
                        .HasColumnType("int");

                    b.Property<byte>("ResistSkill1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistSkill2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistSkill3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistSkill4")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistSkill5")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistSkill6")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState10")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState11")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState12")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState13")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState14")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState15")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState4")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState5")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState6")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState7")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState8")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ResistState9")
                        .HasColumnType("tinyint unsigned");

                    b.Property<short>("SP")
                        .HasColumnType("smallint");

                    b.Property<byte>("Size")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Wis")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Mobs");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbMobItems", b =>
                {
                    b.Property<ushort>("MobId")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("ItemOrder")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("DropRate")
                        .HasColumnType("int");

                    b.Property<ushort>("Grade")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("MobId", "ItemOrder");

                    b.ToTable("MobItems");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbNpc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<string>("Maps")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte>("MerchantType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Model")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Products")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("QuestEnd")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("QuestStart")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("TypeId")
                        .HasColumnType("smallint unsigned");

                    b.Property<string>("WelcomeMessage")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Npcs");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbQuest", b =>
                {
                    b.Property<ushort>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("AttackFighter")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AttackMage")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DefenseDefender")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DefenseMage")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FarmItemCount_1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FarmItemCount_2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FarmItemCount_3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FarmItemTypeId_1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FarmItemTypeId_2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FarmItemTypeId_3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FarmItemType_1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FarmItemType_2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FarmItemType_3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("GiverType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("GiverTypeId")
                        .HasColumnType("smallint unsigned");

                    b.Property<uint>("Gold")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Grow")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("InitItemType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("InitItemTypeId")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("MaxLevel")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("MinLevel")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("MobCount_1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("MobCount_2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("MobId_1")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("MobId_2")
                        .HasColumnType("smallint unsigned");

                    b.Property<string>("MsgComplete")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MsgIncomplete")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MsgResponse_1")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MsgResponse_2")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MsgResponse_3")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MsgSummary")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MsgTake")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MsgWelcome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte>("PatrolRogue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("PrevQuestId_1")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("PrevQuestId_2")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("PrevQuestId_3")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("QuestTimer")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("QuestTypeGiver")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("QuestTypeReceiver")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("QuestUnlock_1")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("QuestUnlock_2")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("ReceivedItemCount_1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ReceivedItemCount_2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ReceivedItemCount_3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ReceivedItemTypeId_1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ReceivedItemTypeId_2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ReceivedItemTypeId_3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ReceivedItemType_1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ReceivedItemType_2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ReceivedItemType_3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ReceiverType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("ReceiverTypeId")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("RevardItemCount_1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("RevardItemCount_2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("RevardItemCount_3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("RevardItemTypeId_1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("RevardItemTypeId_2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("RevardItemTypeId_3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("RevardItemType_1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("RevardItemType_2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("RevardItemType_3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("ShooterRogue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<uint>("XP")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbQuickSkillBarItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("Bag")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Bar")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.Property<ushort>("Number")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.ToTable("CharacterQuickItems");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("AbilityType1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AbilityType10")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AbilityType2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AbilityType3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AbilityType4")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AbilityType5")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AbilityType6")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AbilityType7")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AbilityType8")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("AbilityType9")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("AbilityValue1")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AbilityValue10")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AbilityValue2")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AbilityValue3")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AbilityValue4")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AbilityValue5")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AbilityValue6")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AbilityValue7")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AbilityValue8")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AbilityValue9")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AddDamageHP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AddDamageMP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("AddDamageSP")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("ApplyRange")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("Arrow")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("AttackRange")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Bag")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("ChangeLevel")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ChangeType")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("DamageHP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("DamageMP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("DamageSP")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("DamageType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DefenceType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("DefenceValue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("DisabledSkill")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("Element")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("AttrType");

                    b.Property<byte>("FixRange")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Grow")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("HealHP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("HealMP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("HealSP")
                        .HasColumnType("smallint unsigned");

                    b.Property<int>("KeepTime")
                        .HasColumnType("int");

                    b.Property<byte>("LimitHP")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("MP")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("MultiAttack")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedShield")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon10")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon11")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon12")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon13")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon14")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon15")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon3")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon4")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon5")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon6")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon7")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon8")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("NeedWeapon9")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("PreviousSkillId")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("ReadyTime")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("ReqLevel")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("ResetTime")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("SP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("SkillId")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("SkillLevel")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("SkillName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte>("SkillPoint")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("SkillUtilizer")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("StateType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("SuccessType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("SuccessValue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TargetType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("TimeDamageHP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("TimeDamageMP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("TimeDamageSP")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("TimeDamageType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("TimeHealHP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("TimeHealMP")
                        .HasColumnType("smallint unsigned");

                    b.Property<ushort>("TimeHealSP")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("TypeAttack")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("TypeDetail")
                        .HasColumnType("smallint unsigned");

                    b.Property<byte>("TypeEffect")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("TypeShow")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("DATETIME");

                    b.Property<byte>("UsedByArcher")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("UsedByDefender")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("UsedByFighter")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("UsedByMage")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("UsedByPriest")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("UsedByRanger")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Weapon1")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Weapon2")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Weaponvalue")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("SkillId", "SkillLevel");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("Authority")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4");

                    b.Property<byte>("Faction")
                        .HasColumnType("tinyint unsigned");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastConnectionTime")
                        .HasColumnType("DATETIME");

                    b.Property<byte>("MaxMode")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16) CHARACTER SET utf8mb4");

                    b.Property<uint>("Points")
                        .HasColumnType("int unsigned");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(19)
                        .HasColumnType("varchar(19) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Username", "Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacter", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbUser", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterActiveBuff", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("ActiveBuffs")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imgeneus.Database.Entities.DbSkill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterFriend", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("Friends")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Friend");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterItems", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("Items")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imgeneus.Database.Entities.DbItem", "Item")
                        .WithMany()
                        .HasForeignKey("Type", "TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterQuest", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("Quests")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imgeneus.Database.Entities.DbQuest", "Quest")
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacterSkill", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("Skills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imgeneus.Database.Entities.DbSkill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbQuickSkillBarItem", b =>
                {
                    b.HasOne("Imgeneus.Database.Entities.DbCharacter", "Character")
                        .WithMany("QuickItems")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbCharacter", b =>
                {
                    b.Navigation("ActiveBuffs");

                    b.Navigation("Friends");

                    b.Navigation("Items");

                    b.Navigation("Quests");

                    b.Navigation("QuickItems");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("Imgeneus.Database.Entities.DbUser", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
